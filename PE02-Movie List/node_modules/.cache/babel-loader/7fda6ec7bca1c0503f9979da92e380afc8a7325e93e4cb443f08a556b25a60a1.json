{"ast":null,"code":"var _jsxFileName = \"/Users/aravindanjayachandran/Desktop/CS628_PE/cs628-pe-hema/PE02-Movie List/src/MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = () => {\n  _s();\n  // Array of movie objects\n  const movies = [{\n    title: 'The Dark Knight',\n    genre: 'Action',\n    releaseYear: 2008\n  }, {\n    title: 'Inception',\n    genre: 'Sci-Fi',\n    releaseYear: 2010\n  }, {\n    title: 'Pulp Fiction',\n    genre: 'Crime',\n    releaseYear: 1994\n  }, {\n    title: 'The Shawshank Redemption',\n    genre: 'Drama',\n    releaseYear: 1994\n  }, {\n    title: 'Forrest Gump',\n    genre: 'Drama',\n    releaseYear: 1994\n  }, {\n    title: 'The Matrix',\n    genre: 'Sci-Fi',\n    releaseYear: 1999\n  }, {\n    title: 'Fight Club',\n    genre: 'Drama',\n    releaseYear: 1999\n  }, {\n    title: 'Goodfellas',\n    genre: 'Crime',\n    releaseYear: 1990\n  }, {\n    title: 'The Godfather',\n    genre: 'Crime',\n    releaseYear: 1972\n  }, {\n    title: 'Interstellar',\n    genre: 'Sci-Fi',\n    releaseYear: 2014\n  }, {\n    title: 'The Departed',\n    genre: 'Crime',\n    releaseYear: 2006\n  }, {\n    title: 'Gladiator',\n    genre: 'Action',\n    releaseYear: 2000\n  }, {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    genre: 'Romance',\n    releaseYear: 2004\n  }, {\n    title: 'The Social Network',\n    genre: 'Drama',\n    releaseYear: 2010\n  }, {\n    title: 'Inglourious Basterds',\n    genre: 'War',\n    releaseYear: 2009\n  }];\n\n  // State for selected genre\n  const [selectedGenre, setSelectedGenre] = useState('All Genres');\n\n  // Array of available genres\n  const genres = ['All Genres', 'Action', 'Sci-Fi', 'Crime', 'Drama', 'Romance', 'War'];\n\n  // Function to handle genre change\n  const handleGenreChange = e => {\n    setSelectedGenre(e.target.value);\n  };\n\n  // Function to handle movie click\n  const handleMovieClick = title => {\n    alert('You clicked on ' + title);\n  };\n\n  // Filtered movies based on selected genre\n  const filteredMovies = selectedGenre === 'All Genres' ? movies : movies.filter(movie => movie.genre === selectedGenre);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"genreFilter\",\n      children: \"Filter by Genre: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"genreFilter\",\n      value: selectedGenre,\n      onChange: handleGenreChange,\n      children: genres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: genre,\n        children: genre\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredMovies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleMovieClick(movie.title),\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), \" \", movie.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 50\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Genre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), \" \", movie.genre, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 50\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Release Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), \" \", movie.releaseYear]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"IbYIDWXg6Y9B0sl/t9rDQPzH+Pg=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MovieList","_s","movies","title","genre","releaseYear","selectedGenre","setSelectedGenre","genres","handleGenreChange","e","target","value","handleMovieClick","alert","filteredMovies","filter","movie","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/aravindanjayachandran/Desktop/CS628_PE/cs628-pe-hema/PE02-Movie List/src/MovieList.js"],"sourcesContent":["import React, { useState } from 'react';\n\n\nconst MovieList = () => {\n  // Array of movie objects\n  const movies = [\n    { title: 'The Dark Knight', genre: 'Action', releaseYear: 2008 },\n    { title: 'Inception', genre: 'Sci-Fi', releaseYear: 2010 },\n    { title: 'Pulp Fiction', genre: 'Crime', releaseYear: 1994 },\n    { title: 'The Shawshank Redemption', genre: 'Drama', releaseYear: 1994 },\n    { title: 'Forrest Gump', genre: 'Drama', releaseYear: 1994 },\n    { title: 'The Matrix', genre: 'Sci-Fi', releaseYear: 1999 },\n    { title: 'Fight Club', genre: 'Drama', releaseYear: 1999 },\n    { title: 'Goodfellas', genre: 'Crime', releaseYear: 1990 },\n    { title: 'The Godfather', genre: 'Crime', releaseYear: 1972 },\n    { title: 'Interstellar', genre: 'Sci-Fi', releaseYear: 2014 },\n    { title: 'The Departed', genre: 'Crime', releaseYear: 2006 },\n    { title: 'Gladiator', genre: 'Action', releaseYear: 2000 },\n    { title: 'Eternal Sunshine of the Spotless Mind', genre: 'Romance', releaseYear: 2004 },\n    { title: 'The Social Network', genre: 'Drama', releaseYear: 2010 },\n    { title: 'Inglourious Basterds', genre: 'War', releaseYear: 2009 },\n  ];\n  \n  // State for selected genre\n  const [selectedGenre, setSelectedGenre] = useState('All Genres');\n  \n  // Array of available genres\n  const genres = ['All Genres', 'Action', 'Sci-Fi', 'Crime', 'Drama', 'Romance', 'War'];\n\n  // Function to handle genre change\n  const handleGenreChange = (e) => {\n    setSelectedGenre(e.target.value);\n  };\n\n  // Function to handle movie click\n  const handleMovieClick = (title) => {\n    alert('You clicked on '+ title);\n  };\n\n  // Filtered movies based on selected genre\n  const filteredMovies = selectedGenre === 'All Genres'\n    ? movies\n    : movies.filter(movie => movie.genre === selectedGenre);\n\n  return (\n    <div>\n      <h2>Movies</h2>\n      <label htmlFor=\"genreFilter\">Filter by Genre: </label>\n      <select id=\"genreFilter\" value={selectedGenre} onChange={handleGenreChange}>\n        {genres.map((genre, index) => (\n          <option key={index} value={genre}>{genre}</option>\n        ))}\n      </select>\n      <ul>\n        {filteredMovies.map((movie, index) => (\n          <li key={index} onClick={() => handleMovieClick(movie.title)}>\n            <strong>Title:</strong> {movie.title}<br />\n            <strong>Genre:</strong> {movie.genre}<br />\n            <strong>Release Year:</strong> {movie.releaseYear}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieList;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}